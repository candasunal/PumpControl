# -*- coding: utf-8 -*-
"""
The database of the pump control analysis. 
"""
import scipy.optimize as optimize
import numpy as np
import pandas as pd
import math

# EFFECTS : Consumes a target speed value (integer) and returns a list with the target speed's flow, 
#           head and input power values from 1st group
def G1FlowHeadConverter(target):
    
    try:
        data = pd.read_excel (r'Group1\(212) '+str(target)+ ' rpm.xlsx', sheet_name='QH100tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)
        
        
        newlist = []
        
        for x in firstList:
            
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2], target))
       
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")

# EFFECTS : Consumes a target speed value (integer) and returns a list with the target speed's flow, 
#           head and input power values from 2nd group
def G2FlowHeadConverter(target):
    
    try:
        data = pd.read_excel (r'Group2\(213) '+str(target)+ ' rpm.xlsx', sheet_name='QH100tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)
        
        
        newlist = []
        
        for x in firstList:
            
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2], target))
                    
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")

# EFFECTS : Returns a list with the competitor's flow, head and input power values of 2-10 pump 
def Competitor_2_10():
    
    try:
        data = pd.read_excel (r'Competitor\Competitor 2-10 C3 Modu.xlsx', sheet_name='QH50tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)

        newlist = []
        
        for x in firstList:
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2]))
                    
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")

# EFFECTS : Returns a list with the competitor's flow, head and input power values of 3-7 pump
def Competitor_3_7():
    
    try:
        data = pd.read_excel (r'Competitor\Competitor 3-7 C3 Modu.xlsx', sheet_name='QH50tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)

        newlist = []
        
        for x in firstList:
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2]))
                    
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")

# EFFECTS : Returns a list with the competitor's flow, head and input power values of 3-12 pump
def Competitor_3_12():
    
    try:
        data = pd.read_excel (r'Competitor\Competitor 3-12 C3 Modu.xlsx', sheet_name='QH100tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)

        newlist = []
        
        for x in firstList:
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2]))
                    
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")

# EFFECTS : Returns a list with the competitor's flow, head and input power values of 4-8 pump
def Competitor_4_8():
    
    try:
        data = pd.read_excel (r'Competitor\Competitor 4-8 4800 rpm.xlsx', sheet_name='QH100tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)

        newlist = []
        
        for x in firstList:
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2]))
                    
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")

# EFFECTS : Returns a list with the competitor's flow, head and input power values of 5-8 pump
def Competitor_5_8():
    
    try:
        data = pd.read_excel (r'Competitor\Competitor 5-8 4800 rpm.xlsx', sheet_name='QH100tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)

        newlist = []
        
        for x in firstList:
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2]))
                    
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")

# EFFECTS : Returns a list with the competitor's flow, head and input power values of 4-4 pump
def Competitor_4_4():
    
    try:
        data = pd.read_excel (r'Competitor\Competitor 4-4 3700 rpm.xlsx', sheet_name='QH100tablo', usecols = [7, 8, 12], skiprows = [0, 1, 2, 3, 4, 5, 6, 7]) 
        firstList = []

        for index,row in data.iterrows():
            
            a = tuple(row)
            firstList.append(a)

        newlist = []
        
        for x in firstList:
            if not math.isnan(x[0]):
                newlist.append(((x[1]), (x[0]), x[2]))
                    
        return newlist
    
    except:
        print("Test sonuçlarının bulunduğu klasör bulunamadı. Programı klasörün bir üstündeki klasöre koyunuz.")


# Helper function of the scipy.optimize. The function is decided as:
#   [a b c d                       [x**3,           x**2,          x,            y**3, 
#    e f g h                        y**2,           y,            (x**3)*y,      (x**2)*y, 
#    i j k l    parameters of       x*y,           (x**3)*(y**2), (x**2)*(y**2), x*(y**2), 
#    m n o p]                      (x**3)*(y**3), (x**2)*(y**3), x*(y**3),      constant]
def threeDimensionCurveFit(data, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p):
    
    x = data[:,0]
    y = data[:,1]
    
    #x-cube
    parameter_a = x*x*x*a
    #x-square
    parameter_b = x*x*b
    #x
    parameter_c = x*c
    
    first = parameter_a + parameter_b + parameter_c
    
    #y-cube
    parameter_d = y*y*y*d
    #y-square
    parameter_e = y*y*e
    #y
    parameter_f = y*f
    
    second = parameter_d + parameter_e + parameter_f
    
    #x-cube * y
    parameter_g = x*x*x*y*g
    #x-square * y
    parameter_h = x*x*y*h
    #x * y
    parameter_i = x*y*i
    
    third = parameter_g + parameter_h + parameter_i

    #x-cube * y-square
    parameter_j = x*x*x*y*y*j
    #x-square * y-square
    parameter_k = x*x*y*y*k
    #x * y-square
    parameter_l = x*y*y*l
    
    fourth = parameter_j + parameter_k + parameter_l
    
    #x-cube * y-cube
    parameter_m = x*x*x*y*y*y*m
    #x-square * y-cube
    parameter_n = x*x*y*y*y*n
    #x * y-cube
    parameter_o = x*y*y*y*o
    
    fifth = parameter_m + parameter_n + parameter_o
    
    #constant
    parameter_p = p
    
    
    return first + second + third + fourth + fifth + parameter_p


""" 
**************************************************** GROUP 1 *****************************************************
"""

"""
    Flow, Head and Input Power Values of Group 1
"""

G1_Q_H_Pelk_5000rpm = G1FlowHeadConverter(5000)
G1_Q_H_Pelk_4800rpm = G1FlowHeadConverter(4800)
G1_Q_H_Pelk_4600rpm = G1FlowHeadConverter(4600)
G1_Q_H_Pelk_4450rpm = G1FlowHeadConverter(4450)
G1_Q_H_Pelk_4200rpm = G1FlowHeadConverter(4200)
G1_Q_H_Pelk_4000rpm = G1FlowHeadConverter(4000)
G1_Q_H_Pelk_3700rpm = G1FlowHeadConverter(3700)
G1_Q_H_Pelk_3500rpm = G1FlowHeadConverter(3500)
G1_Q_H_Pelk_3300rpm = G1FlowHeadConverter(3300)
G1_Q_H_Pelk_3000rpm = G1FlowHeadConverter(3000)
G1_Q_H_Pelk_2800rpm = G1FlowHeadConverter(2800)
G1_Q_H_Pelk_2600rpm = G1FlowHeadConverter(2600)
G1_Q_H_Pelk_2400rpm = G1FlowHeadConverter(2400)
G1_Q_H_Pelk_2200rpm = G1FlowHeadConverter(2200)
G1_Q_H_Pelk_2000rpm = G1FlowHeadConverter(2000)
G1_Q_H_Pelk_1400rpm = G1FlowHeadConverter(1400)

G1_Q_H_Pelk_Speed = np.array(G1_Q_H_Pelk_1400rpm+
                             G1_Q_H_Pelk_2000rpm+
                             G1_Q_H_Pelk_2200rpm+
                             G1_Q_H_Pelk_2400rpm+
                             G1_Q_H_Pelk_2600rpm+
                             G1_Q_H_Pelk_2800rpm+
                             G1_Q_H_Pelk_3000rpm+
                             G1_Q_H_Pelk_3300rpm+
                             G1_Q_H_Pelk_3500rpm+
                             G1_Q_H_Pelk_3700rpm+
                             G1_Q_H_Pelk_4000rpm+
                             G1_Q_H_Pelk_4200rpm+
                             G1_Q_H_Pelk_4450rpm+
                             G1_Q_H_Pelk_4600rpm+
                             G1_Q_H_Pelk_4800rpm+
                             G1_Q_H_Pelk_5000rpm)

"""
    Parameter calculation of Input Power from Flow & Speed of Group 1
"""

G1_Q_H_Pelk_guess = (0, 0, 1.4, 0, 0, 7.48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.49)
G1_Q_H_Pelk_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G1_Q_H_Pelk_Speed[:,:2], G1_Q_H_Pelk_Speed[:,2], G1_Q_H_Pelk_guess)

"""
    Parameter calculation of Speed from Flow & Speed of Group 1
"""

G1_Q_H_speed_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
G1_Q_H_speed_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G1_Q_H_Pelk_Speed[:,:2], G1_Q_H_Pelk_Speed[:,3], G1_Q_H_speed_guess)

"""
    Parameter calculation of Head from Flow & Speed of Group 1
"""

# The order of data is Flow-Head-Speed. It will be converted to Flow-Speed-Head
G1_Q_Speed_H_raw =[]

for e in G1_Q_H_Pelk_Speed:
    G1_Q_Speed_H_raw.append([e[0], e[3], e[1], e[2]])

G1_Q_Speed_H = np.array(G1_Q_Speed_H_raw)

G1_Q_Speed_H_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
G1_Q_Speed_H_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G1_Q_Speed_H[:,:2], G1_Q_Speed_H[:,2], G1_Q_Speed_H_guess)



"""
    Parameter calculation of Head from Flow & Input Power of Group 1
"""

# The order of data is Flow-Head-Speed. It will be converted to Flow-Speed-Head
G1_Q_Pelk_H_raw =[]

for e in G1_Q_H_Pelk_Speed:
    G1_Q_Pelk_H_raw.append([e[0], e[2], e[1], e[3]])

G1_Q_Pelk_H = np.array(G1_Q_Pelk_H_raw)

G1_Q_Pelk_H_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
G1_Q_Pelk_H_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G1_Q_Pelk_H[:,:2], G1_Q_Pelk_H[:,2], G1_Q_Pelk_H_guess)



""" 
**************************************************** GROUP 2 **************************************************
"""


"""
    Flow, Head and Input Power Values of Group 2
"""

G2_Q_H_Pelk_4800rpm = G2FlowHeadConverter(4800)
G2_Q_H_Pelk_4600rpm = G2FlowHeadConverter(4600)
G2_Q_H_Pelk_4400rpm = G2FlowHeadConverter(4400)
G2_Q_H_Pelk_4200rpm = G2FlowHeadConverter(4200)
G2_Q_H_Pelk_4000rpm = G2FlowHeadConverter(4000)
G2_Q_H_Pelk_3700rpm = G2FlowHeadConverter(3700)
G2_Q_H_Pelk_3500rpm = G2FlowHeadConverter(3500)
G2_Q_H_Pelk_3300rpm = G2FlowHeadConverter(3300)
G2_Q_H_Pelk_3000rpm = G2FlowHeadConverter(3000)
G2_Q_H_Pelk_2800rpm = G2FlowHeadConverter(2800)
G2_Q_H_Pelk_2600rpm = G2FlowHeadConverter(2600)
G2_Q_H_Pelk_2400rpm = G2FlowHeadConverter(2400)
G2_Q_H_Pelk_2200rpm = G2FlowHeadConverter(2200)
G2_Q_H_Pelk_2000rpm = G2FlowHeadConverter(2000)
G2_Q_H_Pelk_1500rpm = G2FlowHeadConverter(1500)

G2_Q_H_Pelk_Speed = np.array(G2_Q_H_Pelk_1500rpm+
                             G2_Q_H_Pelk_2000rpm+
                             G2_Q_H_Pelk_2200rpm+
                             G2_Q_H_Pelk_2400rpm+
                             G2_Q_H_Pelk_2600rpm+
                             G2_Q_H_Pelk_2800rpm+
                             G2_Q_H_Pelk_3000rpm+
                             G2_Q_H_Pelk_3300rpm+
                             G2_Q_H_Pelk_3500rpm+
                             G2_Q_H_Pelk_3700rpm+
                             G2_Q_H_Pelk_4000rpm+
                             G2_Q_H_Pelk_4200rpm+
                             G2_Q_H_Pelk_4400rpm+
                             G2_Q_H_Pelk_4600rpm+
                             G2_Q_H_Pelk_4800rpm)

"""
    Parameter calculation of Input Power from Flow & Speed of Group 2
"""

G2_Q_H_Pelk_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
G2_Q_H_Pelk_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G2_Q_H_Pelk_Speed[:,:2], G2_Q_H_Pelk_Speed[:,2], G2_Q_H_Pelk_guess)


"""
    Parameter calculation of Speed from Flow & Speed of Group 2
"""


G2_Q_H_speed_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
G2_Q_H_speed_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G2_Q_H_Pelk_Speed[:,:2], G2_Q_H_Pelk_Speed[:,3], G2_Q_H_speed_guess)

"""
    Parameter calculation of Head from Flow & Speed of Group 2
"""

# The order of data is Flow-Head-Speed. It will be converted to Flow-Speed-Head
G2_Q_Speed_H_raw =[]

for e in G2_Q_H_Pelk_Speed:
    G2_Q_Speed_H_raw.append([e[0], e[3], e[1], e[2]])



G2_Q_Speed_H = np.array(G2_Q_Speed_H_raw)

G2_Q_Speed_H_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
G2_Q_Speed_H_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G2_Q_Speed_H[:,:2], G2_Q_Speed_H[:,2], G2_Q_Speed_H_guess)


"""
    Parameter calculation of Head from Flow & Input Power of Group 2
"""

# The order of data is Flow-Head-Speed. It will be converted to Flow-Speed-Head
G2_Q_Pelk_H_raw =[]

for e in G2_Q_H_Pelk_Speed:
    G2_Q_Pelk_H_raw.append([e[0], e[2], e[1], e[3]])

G2_Q_Pelk_H = np.array(G2_Q_Pelk_H_raw)

G2_Q_Pelk_H_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
G2_Q_Pelk_H_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, G2_Q_Pelk_H[:,:2], G2_Q_Pelk_H[:,2], G2_Q_Pelk_H_guess)



"""
    Curve Fitting for a specific speed
"""

def Q_H_curve_fit(data, a, b, c, d, e, f):
    
    Q = data[:,0]
    
    #x-to-the-four
    a_parameter = a*(Q**5)

    #x-to-the-four
    b_parameter = b*(Q**4)
    
    #x-to-the-four
    c_parameter = c*(Q**3)
    
    #x-to-the-four
    d_parameter = d*(Q**2)
    
    #x-to-the-four
    e_parameter = e*Q
    
    f_parameter = f
    
    return a_parameter + b_parameter + c_parameter + d_parameter + e_parameter + f_parameter






"""
    Input Power, Speed and Torque Values 5/8 Motor
"""


rpm1400_Pelk_Speed_Torque = [(12,1400,0.0189),(13,1400,0.0248),(14,1400,0.0307),(15,1400,0.0366),(16,1400,0.0425),(17,1400,0.0484),(18,1400,0.0543),(19,1400,0.0602),(20,1400,0.0661),(21,1400,0.072),(22,1400,0.0779),(23,1400,0.0838),(24,1400,0.0897),(25,1400,0.0956),(26,1400,0.1015),(27,1400,0.1074)]
rpm1600_Pelk_Speed_Torque = [(18,1600,0.049),(19,1600,0.054),(20,1600,0.06),(21,1600,0.065),(22,1600,0.071),(23,1600,0.076),(24,1600,0.081),(25,1600,0.087),(26,1600,0.092),(27,1600,0.098),(28,1600,0.103),(29,1600,0.108),(30,1600,0.114),(31,1600,0.119),(32,1600,0.124),(33,1600,0.129),(34,1600,0.135),(35,1600,0.14),(36,1600,0.145),(37,1600,0.15),(38,1600,0.155),(39,1600,0.16),(40,1600,0.166),(41,1600,0.171),(42,1600,0.176),]
rpm1800_Pelk_Speed_Torque = [(20,1800,0.05),(21,1800,0.055),(22,1800,0.06),(23,1800,0.064),(24,1800,0.069),(25,1800,0.074),(26,1800,0.078),(27,1800,0.083),(28,1800,0.088),(29,1800,0.092),(30,1800,0.097),(31,1800,0.102),(32,1800,0.107),(33,1800,0.111),(34,1800,0.116),(35,1800,0.121),(36,1800,0.125),(37,1800,0.13),(38,1800,0.135),(39,1800,0.139),(40,1800,0.144),(41,1800,0.149),(42,1800,0.154),(43,1800,0.158),(44,1800,0.163),(45,1800,0.168),(46,1800,0.172),(47,1800,0.177),]
rpm2000_Pelk_Speed_Torque = [(22,2000,0.051),(23,2000,0.055),(24,2000,0.059),(25,2000,0.064),(26,2000,0.068),(27,2000,0.073),(28,2000,0.077),(29,2000,0.082),(30,2000,0.086),(31,2000,0.09),(32,2000,0.095),(33,2000,0.099),(34,2000,0.103),(35,2000,0.108),(36,2000,0.112),(37,2000,0.116),(38,2000,0.121),(39,2000,0.125),(40,2000,0.129),(41,2000,0.134),(42,2000,0.138),(43,2000,0.142),(44,2000,0.146),(45,2000,0.151),(46,2000,0.155),(47,2000,0.159),(48,2000,0.163),(49,2000,0.167),(50,2000,0.172),(51,2000,0.176),(52,2000,0.18),]
rpm2200_Pelk_Speed_Torque = [(23,2200,0.047),(24,2200,0.051),(25,2200,0.055),(26,2200,0.059),(27,2200,0.063),(28,2200,0.067),(29,2200,0.071),(30,2200,0.075),(31,2200,0.079),(32,2200,0.083),(33,2200,0.087),(34,2200,0.091),(35,2200,0.095),(36,2200,0.099),(37,2200,0.103),(38,2200,0.107),(39,2200,0.111),(40,2200,0.115),(41,2200,0.119),(42,2200,0.122),(43,2200,0.126),(44,2200,0.13),(45,2200,0.134),(46,2200,0.138),(47,2200,0.142),(48,2200,0.146),(49,2200,0.15),(50,2200,0.154),(51,2200,0.158),(52,2200,0.162),(53,2200,0.165),(54,2200,0.169),(55,2200,0.173),(56,2200,0.177),(57,2200,0.181),]
rpm2400_Pelk_Speed_Torque = [(25,2400,0.049),(26,2400,0.052),(27,2400,0.056),(28,2400,0.06),(29,2400,0.063),(30,2400,0.067),(31,2400,0.071),(32,2400,0.074),(33,2400,0.078),(34,2400,0.082),(35,2400,0.085),(36,2400,0.089),(37,2400,0.093),(38,2400,0.096),(39,2400,0.1),(40,2400,0.104),(41,2400,0.107),(42,2400,0.111),(43,2400,0.115),(44,2400,0.118),(45,2400,0.122),(46,2400,0.126),(47,2400,0.129),(48,2400,0.133),(49,2400,0.136),(50,2400,0.14),(51,2400,0.144),(52,2400,0.147),(53,2400,0.151),(54,2400,0.155),(55,2400,0.158),(56,2400,0.162),(57,2400,0.165),(58,2400,0.169),(59,2400,0.173),(60,2400,0.176),(61,2400,0.18),]
rpm2600_Pelk_Speed_Torque = [(26,2600,0.048),(27,2600,0.052),(28,2600,0.055),(29,2600,0.059),(30,2600,0.062),(31,2600,0.066),(32,2600,0.069),(33,2600,0.073),(34,2600,0.076),(35,2600,0.079),(36,2600,0.083),(37,2600,0.086),(38,2600,0.09),(39,2600,0.093),(40,2600,0.097),(41,2600,0.1),(42,2600,0.104),(43,2600,0.107),(44,2600,0.11),(45,2600,0.114),(46,2600,0.117),(47,2600,0.121),(48,2600,0.124),(49,2600,0.127),(50,2600,0.131),(51,2600,0.134),(52,2600,0.138),(53,2600,0.141),(54,2600,0.144),(55,2600,0.148),(56,2600,0.151),(57,2600,0.155),(58,2600,0.158),(59,2600,0.161),(60,2600,0.165),(61,2600,0.168),(62,2600,0.171),(63,2600,0.175),(64,2600,0.178),(65,2600,0.181),]
rpm2800_Pelk_Speed_Torque = [(32,2800,0.059),(33,2800,0.062),(34,2800,0.065),(35,2800,0.068),(36,2800,0.071),(37,2800,0.075),(38,2800,0.078),(39,2800,0.081),(40,2800,0.084),(41,2800,0.087),(42,2800,0.091),(43,2800,0.094),(44,2800,0.097),(45,2800,0.1),(46,2800,0.103),(47,2800,0.107),(48,2800,0.11),(49,2800,0.113),(50,2800,0.116),(51,2800,0.119),(52,2800,0.123),(53,2800,0.126),(54,2800,0.129),(55,2800,0.132),(56,2800,0.135),(57,2800,0.139),(58,2800,0.142),(59,2800,0.145),(60,2800,0.148),(61,2800,0.151),(62,2800,0.155),(63,2800,0.158),(64,2800,0.161),(65,2800,0.164),(66,2800,0.167),(67,2800,0.171),(68,2800,0.174),(69,2800,0.177),(70,2800,0.18),(71,2800,0.183),(72,2800,0.187),(73,2800,0.19),(74,2800,0.193),(75,2800,0.196),(76,2800,0.199),(77,2800,0.203),(78,2800,0.206),(79,2800,0.209),(80,2800,0.212),]
rpm3000_Pelk_Speed_Torque = [(36,3000,0.065),(37,3000,0.068),(38,3000,0.071),(39,3000,0.074),(40,3000,0.077),(41,3000,0.08),(42,3000,0.083),(43,3000,0.086),(44,3000,0.088),(45,3000,0.091),(46,3000,0.094),(47,3000,0.097),(48,3000,0.1),(49,3000,0.103),(50,3000,0.106),(51,3000,0.109),(52,3000,0.112),(53,3000,0.115),(54,3000,0.118),(55,3000,0.121),(56,3000,0.123),(57,3000,0.126),(58,3000,0.129),(59,3000,0.132),(60,3000,0.135),(61,3000,0.138),(62,3000,0.141),(63,3000,0.144),(64,3000,0.147),(65,3000,0.15),(66,3000,0.153),(67,3000,0.155),(68,3000,0.158),(69,3000,0.161),(70,3000,0.164),(71,3000,0.167),(72,3000,0.17),(73,3000,0.173),(74,3000,0.176),(75,3000,0.179),(76,3000,0.182),(77,3000,0.184),(78,3000,0.187),(79,3000,0.19),(80,3000,0.193),(81,3000,0.196),(82,3000,0.199),(83,3000,0.202),(84,3000,0.205),(85,3000,0.208),(86,3000,0.21),(87,3000,0.213),(88,3000,0.216),(89,3000,0.219),(90,3000,0.222),(91,3000,0.225),(92,3000,0.228),(93,3000,0.231),(94,3000,0.234),(95,3000,0.236),(96,3000,0.239),(97,3000,0.242),(98,3000,0.245),(99,3000,0.248),(100,3000,0.251),]
rpm3300_Pelk_Speed_Torque = [(44,3300,0.074),(45,3300,0.077),(46,3300,0.08),(47,3300,0.083),(48,3300,0.086),(49,3300,0.088),(50,3300,0.091),(51,3300,0.094),(52,3300,0.097),(53,3300,0.1),(54,3300,0.102),(55,3300,0.105),(56,3300,0.108),(57,3300,0.111),(58,3300,0.114),(59,3300,0.116),(60,3300,0.119),(61,3300,0.122),(62,3300,0.125),(63,3300,0.128),(64,3300,0.13),(65,3300,0.133),(66,3300,0.136),(67,3300,0.139),(68,3300,0.141),(69,3300,0.144),(70,3300,0.147),(71,3300,0.15),(72,3300,0.152),(73,3300,0.155),(74,3300,0.158),(75,3300,0.161),(76,3300,0.163),(77,3300,0.166),(78,3300,0.169),(79,3300,0.172),(80,3300,0.174),(81,3300,0.177),(82,3300,0.18),(83,3300,0.182),(84,3300,0.185),(85,3300,0.188),(86,3300,0.19),(87,3300,0.193),(88,3300,0.196),(89,3300,0.198),(90,3300,0.201),(91,3300,0.204),(92,3300,0.206),(93,3300,0.209),(94,3300,0.212),(95,3300,0.214),(96,3300,0.217),(97,3300,0.22),(98,3300,0.222),(99,3300,0.225),(100,3300,0.228),(101,3300,0.23),(102,3300,0.233),(103,3300,0.235),(104,3300,0.238),(105,3300,0.241),(106,3300,0.243),(107,3300,0.246),(108,3300,0.248),(109,3300,0.251),(110,3300,0.254),(111,3300,0.256),(112,3300,0.259),(113,3300,0.261),(114,3300,0.264),(115,3300,0.266),(116,3300,0.269),(117,3300,0.272),(118,3300,0.274),(119,3300,0.277),(120,3300,0.279),(121,3300,0.282),]
rpm3500_Pelk_Speed_Torque = [(52,3500,0.091),(53,3500,0.094),(54,3500,0.096),(55,3500,0.099),(56,3500,0.101),(57,3500,0.104),(58,3500,0.106),(59,3500,0.109),(60,3500,0.112),(61,3500,0.114),(62,3500,0.117),(63,3500,0.119),(64,3500,0.122),(65,3500,0.124),(66,3500,0.127),(67,3500,0.129),(68,3500,0.132),(69,3500,0.134),(70,3500,0.137),(71,3500,0.14),(72,3500,0.142),(73,3500,0.145),(74,3500,0.147),(75,3500,0.15),(76,3500,0.152),(77,3500,0.155),(78,3500,0.157),(79,3500,0.16),(80,3500,0.162),(81,3500,0.165),(82,3500,0.167),(83,3500,0.17),(84,3500,0.172),(85,3500,0.175),(86,3500,0.177),(87,3500,0.18),(88,3500,0.182),(89,3500,0.185),(90,3500,0.187),(91,3500,0.19),(92,3500,0.192),(93,3500,0.195),(94,3500,0.197),(95,3500,0.2),(96,3500,0.202),(97,3500,0.205),(98,3500,0.207),(99,3500,0.21),(100,3500,0.212),(101,3500,0.215),(102,3500,0.217),(103,3500,0.22),(104,3500,0.222),(105,3500,0.225),(106,3500,0.227),(107,3500,0.229),(108,3500,0.232),(109,3500,0.234),(110,3500,0.237),(111,3500,0.239),(112,3500,0.242),(113,3500,0.244),(114,3500,0.247),(115,3500,0.249),(116,3500,0.252),(117,3500,0.254),(118,3500,0.256),(119,3500,0.259),(120,3500,0.261),(121,3500,0.264),(122,3500,0.266),(123,3500,0.269),(124,3500,0.271),(125,3500,0.273),(126,3500,0.276),(127,3500,0.278),(128,3500,0.281),(129,3500,0.283),(130,3500,0.286),(131,3500,0.288),(132,3500,0.29),(133,3500,0.293),(134,3500,0.295),(135,3500,0.298),(136,3500,0.3),(137,3500,0.302),(138,3500,0.305),(139,3500,0.307),(140,3500,0.31),(141,3500,0.312),(142,3500,0.314),(143,3500,0.317),(144,3500,0.319),(145,3500,0.322),(146,3500,0.324),(147,3500,0.326),(148,3500,0.329),]
rpm3700_Pelk_Speed_Torque = [(55,3700,0.09),(56,3700,0.093),(57,3700,0.095),(58,3700,0.098),(59,3700,0.1),(60,3700,0.103),(61,3700,0.105),(62,3700,0.107),(63,3700,0.11),(64,3700,0.112),(65,3700,0.115),(66,3700,0.117),(67,3700,0.12),(68,3700,0.122),(69,3700,0.124),(70,3700,0.127),(71,3700,0.129),(72,3700,0.132),(73,3700,0.134),(74,3700,0.137),(75,3700,0.139),(76,3700,0.141),(77,3700,0.144),(78,3700,0.146),(79,3700,0.149),(80,3700,0.151),(81,3700,0.153),(82,3700,0.156),(83,3700,0.158),(84,3700,0.161),(85,3700,0.163),(86,3700,0.165),(87,3700,0.168),(88,3700,0.17),(89,3700,0.173),(90,3700,0.175),(91,3700,0.177),(92,3700,0.18),(93,3700,0.182),(94,3700,0.184),(95,3700,0.187),(96,3700,0.189),(97,3700,0.192),(98,3700,0.194),(99,3700,0.196),(100,3700,0.199),(101,3700,0.201),(102,3700,0.203),(103,3700,0.206),(104,3700,0.208),(105,3700,0.211),(106,3700,0.213),(107,3700,0.215),(108,3700,0.218),(109,3700,0.22),(110,3700,0.222),(111,3700,0.225),(112,3700,0.227),(113,3700,0.229),(114,3700,0.232),(115,3700,0.234),(116,3700,0.236),(117,3700,0.239),(118,3700,0.241),(119,3700,0.243),(120,3700,0.246),(121,3700,0.248),(122,3700,0.25),(123,3700,0.253),(124,3700,0.255),(125,3700,0.257),(126,3700,0.26),(127,3700,0.262),(128,3700,0.264),(129,3700,0.267),(130,3700,0.269),(131,3700,0.271),(132,3700,0.273),(133,3700,0.276),(134,3700,0.278),(135,3700,0.28),(136,3700,0.283),(137,3700,0.285),(138,3700,0.287),(139,3700,0.29),(140,3700,0.292),(141,3700,0.294),(142,3700,0.296),(143,3700,0.299),(144,3700,0.301),(145,3700,0.303),(146,3700,0.306),(147,3700,0.308),(148,3700,0.31),(149,3700,0.312),(150,3700,0.315),(151,3700,0.317),(152,3700,0.319),(153,3700,0.322),(154,3700,0.324),(155,3700,0.326),(156,3700,0.328),(157,3700,0.331),(158,3700,0.333),(159,3700,0.335),(160,3700,0.337),(161,3700,0.34),(162,3700,0.342),(163,3700,0.344),(164,3700,0.346),(165,3700,0.349),(166,3700,0.351),(167,3700,0.353),(168,3700,0.355),(169,3700,0.358),(170,3700,0.36),(171,3700,0.362),(172,3700,0.364),(173,3700,0.367),(174,3700,0.369),(175,3700,0.371),]
rpm4000_Pelk_Speed_Torque = [(70,4000,0.115),(71,4000,0.117),(72,4000,0.119),(73,4000,0.121),(74,4000,0.124),(75,4000,0.126),(76,4000,0.128),(77,4000,0.13),(78,4000,0.133),(79,4000,0.135),(80,4000,0.137),(81,4000,0.139),(82,4000,0.141),(83,4000,0.144),(84,4000,0.146),(85,4000,0.148),(86,4000,0.15),(87,4000,0.153),(88,4000,0.155),(89,4000,0.157),(90,4000,0.159),(91,4000,0.161),(92,4000,0.164),(93,4000,0.166),(94,4000,0.168),(95,4000,0.17),(96,4000,0.172),(97,4000,0.175),(98,4000,0.177),(99,4000,0.179),(100,4000,0.181),(101,4000,0.183),(102,4000,0.186),(103,4000,0.188),(104,4000,0.19),(105,4000,0.192),(106,4000,0.194),(107,4000,0.197),(108,4000,0.199),(109,4000,0.201),(110,4000,0.203),(111,4000,0.205),(112,4000,0.208),(113,4000,0.21),(114,4000,0.212),(115,4000,0.214),(116,4000,0.216),(117,4000,0.218),(118,4000,0.221),(119,4000,0.223),(120,4000,0.225),(121,4000,0.227),(122,4000,0.229),(123,4000,0.232),(124,4000,0.234),(125,4000,0.236),(126,4000,0.238),(127,4000,0.24),(128,4000,0.242),(129,4000,0.245),(130,4000,0.247),(131,4000,0.249),(132,4000,0.251),(133,4000,0.253),(134,4000,0.255),(135,4000,0.258),(136,4000,0.26),(137,4000,0.262),(138,4000,0.264),(139,4000,0.266),(140,4000,0.268),(141,4000,0.271),(142,4000,0.273),(143,4000,0.275),(144,4000,0.277),(145,4000,0.279),(146,4000,0.281),(147,4000,0.283),(148,4000,0.286),(149,4000,0.288),(150,4000,0.29),(151,4000,0.292),(152,4000,0.294),(153,4000,0.296),(154,4000,0.299),(155,4000,0.301),(156,4000,0.303),(157,4000,0.305),(158,4000,0.307),(159,4000,0.309),(160,4000,0.311),(161,4000,0.314),(162,4000,0.316),(163,4000,0.318),(164,4000,0.32),(165,4000,0.322),(166,4000,0.324),(167,4000,0.326),(168,4000,0.328),(169,4000,0.331),(170,4000,0.333),(171,4000,0.335),(172,4000,0.337),(173,4000,0.339),(174,4000,0.341),(175,4000,0.343),(176,4000,0.346),(177,4000,0.348),(178,4000,0.35),(179,4000,0.352),(180,4000,0.354),(181,4000,0.356),(182,4000,0.358),(183,4000,0.36),(184,4000,0.362),(185,4000,0.365),(186,4000,0.367),(187,4000,0.369),(188,4000,0.371),(189,4000,0.373),(190,4000,0.375),(191,4000,0.377),(192,4000,0.379),(193,4000,0.381),(194,4000,0.384),(195,4000,0.386),(196,4000,0.388),(197,4000,0.39),(198,4000,0.392),(199,4000,0.394),(200,4000,0.396),(201,4000,0.398),(202,4000,0.4),(203,4000,0.402),(204,4000,0.405),(205,4000,0.407),(206,4000,0.409),(207,4000,0.411),(208,4000,0.413),(209,4000,0.415),(210,4000,0.417),(211,4000,0.419),(212,4000,0.421),(213,4000,0.423),(214,4000,0.426),(215,4000,0.428),(216,4000,0.43),(217,4000,0.432),(218,4000,0.434),(219,4000,0.436),(220,4000,0.438),(221,4000,0.44),(222,4000,0.442),(223,4000,0.444),(224,4000,0.446),(225,4000,0.448),(226,4000,0.45),(227,4000,0.453),(228,4000,0.455),(229,4000,0.457),(230,4000,0.459),(231,4000,0.461),(232,4000,0.463),(233,4000,0.465),(234,4000,0.467),(235,4000,0.469),(236,4000,0.471),(237,4000,0.473),]
rpm4200_Pelk_Speed_Torque = [(83,4200,0.135),(84,4200,0.137),(85,4200,0.14),(86,4200,0.142),(87,4200,0.144),(88,4200,0.146),(89,4200,0.148),(90,4200,0.15),(91,4200,0.152),(92,4200,0.155),(93,4200,0.157),(94,4200,0.159),(95,4200,0.161),(96,4200,0.163),(97,4200,0.165),(98,4200,0.167),(99,4200,0.169),(100,4200,0.172),(101,4200,0.174),(102,4200,0.176),(103,4200,0.178),(104,4200,0.18),(105,4200,0.182),(106,4200,0.184),(107,4200,0.186),(108,4200,0.188),(109,4200,0.191),(110,4200,0.193),(111,4200,0.195),(112,4200,0.197),(113,4200,0.199),(114,4200,0.201),(115,4200,0.203),(116,4200,0.205),(117,4200,0.207),(118,4200,0.21),(119,4200,0.212),(120,4200,0.214),(121,4200,0.216),(122,4200,0.218),(123,4200,0.22),(124,4200,0.222),(125,4200,0.224),(126,4200,0.226),(127,4200,0.228),(128,4200,0.23),(129,4200,0.233),(130,4200,0.235),(131,4200,0.237),(132,4200,0.239),(133,4200,0.241),(134,4200,0.243),(135,4200,0.245),(136,4200,0.247),(137,4200,0.249),(138,4200,0.251),(139,4200,0.253),(140,4200,0.255),(141,4200,0.258),(142,4200,0.26),(143,4200,0.262),(144,4200,0.264),(145,4200,0.266),(146,4200,0.268),(147,4200,0.27),(148,4200,0.272),(149,4200,0.274),(150,4200,0.276),(151,4200,0.278),(152,4200,0.28),(153,4200,0.282),(154,4200,0.284),(155,4200,0.286),(156,4200,0.288),(157,4200,0.291),(158,4200,0.293),(159,4200,0.295),(160,4200,0.297),(161,4200,0.299),(162,4200,0.301),(163,4200,0.303),(164,4200,0.305),(165,4200,0.307),(166,4200,0.309),(167,4200,0.311),(168,4200,0.313),(169,4200,0.315),(170,4200,0.317),(171,4200,0.319),(172,4200,0.321),(173,4200,0.323),(174,4200,0.325),(175,4200,0.327),(176,4200,0.329),(177,4200,0.331),(178,4200,0.333),(179,4200,0.335),(180,4200,0.337),(181,4200,0.339),(182,4200,0.341),(183,4200,0.343),(184,4200,0.345),(185,4200,0.347),(186,4200,0.349),(187,4200,0.352),(188,4200,0.354),(189,4200,0.356),(190,4200,0.358),(191,4200,0.36),(192,4200,0.362),(193,4200,0.364),(194,4200,0.366),(195,4200,0.368),(196,4200,0.37),(197,4200,0.372),(198,4200,0.374),(199,4200,0.376),(200,4200,0.378),(201,4200,0.38),(202,4200,0.382),(203,4200,0.384),(204,4200,0.386),(205,4200,0.388),(206,4200,0.39),(207,4200,0.392),(208,4200,0.394),(209,4200,0.396),(210,4200,0.398),(211,4200,0.4),(212,4200,0.402),(213,4200,0.403),(214,4200,0.405),(215,4200,0.407),(216,4200,0.409),(217,4200,0.411),(218,4200,0.413),(219,4200,0.415),(220,4200,0.417),(221,4200,0.419),(222,4200,0.421),(223,4200,0.423),(224,4200,0.425),(225,4200,0.427),(226,4200,0.429),(227,4200,0.431),(228,4200,0.433),(229,4200,0.435),(230,4200,0.437),(231,4200,0.439),(232,4200,0.441),(233,4200,0.443),(234,4200,0.445),(235,4200,0.447),(236,4200,0.449),(237,4200,0.451),(238,4200,0.453),(239,4200,0.455),(240,4200,0.457),(241,4200,0.459),(242,4200,0.46),(243,4200,0.462),(244,4200,0.464),(245,4200,0.466),(246,4200,0.468),(247,4200,0.47),(248,4200,0.472),(249,4200,0.474),(250,4200,0.476),(251,4200,0.478),(252,4200,0.48),(253,4200,0.482),(254,4200,0.484),(255,4200,0.486),(256,4200,0.488),(257,4200,0.49),]
rpm4450_Pelk_Speed_Torque = [(116,4450,0.191),(117,4450,0.193),(118,4450,0.195),(119,4450,0.197),(120,4450,0.199),(121,4450,0.201),(122,4450,0.203),(123,4450,0.205),(124,4450,0.207),(125,4450,0.209),(126,4450,0.211),(127,4450,0.213),(128,4450,0.214),(129,4450,0.216),(130,4450,0.218),(131,4450,0.22),(132,4450,0.222),(133,4450,0.224),(134,4450,0.226),(135,4450,0.228),(136,4450,0.23),(137,4450,0.232),(138,4450,0.234),(139,4450,0.236),(140,4450,0.238),(141,4450,0.24),(142,4450,0.242),(143,4450,0.244),(144,4450,0.246),(145,4450,0.248),(146,4450,0.25),(147,4450,0.252),(148,4450,0.254),(149,4450,0.256),(150,4450,0.258),(151,4450,0.26),(152,4450,0.262),(153,4450,0.264),(154,4450,0.266),(155,4450,0.268),(156,4450,0.27),(157,4450,0.271),(158,4450,0.273),(159,4450,0.275),(160,4450,0.277),(161,4450,0.279),(162,4450,0.281),(163,4450,0.283),(164,4450,0.285),(165,4450,0.287),(166,4450,0.289),(167,4450,0.291),(168,4450,0.293),(169,4450,0.295),(170,4450,0.297),(171,4450,0.299),(172,4450,0.301),(173,4450,0.303),(174,4450,0.305),(175,4450,0.307),(176,4450,0.308),(177,4450,0.31),(178,4450,0.312),(179,4450,0.314),(180,4450,0.316),(181,4450,0.318),(182,4450,0.32),(183,4450,0.322),(184,4450,0.324),(185,4450,0.326),(186,4450,0.328),(187,4450,0.33),(188,4450,0.332),(189,4450,0.334),(190,4450,0.336),(191,4450,0.337),(192,4450,0.339),(193,4450,0.341),(194,4450,0.343),(195,4450,0.345),(196,4450,0.347),(197,4450,0.349),(198,4450,0.351),(199,4450,0.353),(200,4450,0.355),(201,4450,0.357),(202,4450,0.359),(203,4450,0.361),(204,4450,0.362),(205,4450,0.364),(206,4450,0.366),(207,4450,0.368),(208,4450,0.37),(209,4450,0.372),(210,4450,0.374),(211,4450,0.376),(212,4450,0.378),(213,4450,0.38),(214,4450,0.382),(215,4450,0.384),(216,4450,0.385),(217,4450,0.387),(218,4450,0.389),(219,4450,0.391),(220,4450,0.393),(221,4450,0.395),(222,4450,0.397),(223,4450,0.399),(224,4450,0.401),(225,4450,0.403),(226,4450,0.404),(227,4450,0.406),(228,4450,0.408),(229,4450,0.41),(230,4450,0.412),(231,4450,0.414),(232,4450,0.416),(233,4450,0.418),(234,4450,0.42),(235,4450,0.422),(236,4450,0.423),(237,4450,0.425),(238,4450,0.427),(239,4450,0.429),(240,4450,0.431),(241,4450,0.433),(242,4450,0.435),(243,4450,0.437),(244,4450,0.439),(245,4450,0.44),(246,4450,0.442),(247,4450,0.444),(248,4450,0.446),(249,4450,0.448),(250,4450,0.45),(251,4450,0.452),(252,4450,0.454),(253,4450,0.455),(254,4450,0.457),(255,4450,0.459),(256,4450,0.461),(257,4450,0.463),(258,4450,0.465),(259,4450,0.467),(260,4450,0.469),(261,4450,0.47),(262,4450,0.472),(263,4450,0.474),(264,4450,0.476),(265,4450,0.478),(266,4450,0.48),(267,4450,0.482),(268,4450,0.484),(269,4450,0.485),(270,4450,0.487),(271,4450,0.489),(272,4450,0.491),(273,4450,0.493),(274,4450,0.495),(275,4450,0.497),(276,4450,0.498),(277,4450,0.5),(278,4450,0.502),(279,4450,0.504),(280,4450,0.506),(281,4450,0.508),(282,4450,0.51),(283,4450,0.511),(284,4450,0.513),(285,4450,0.515),(286,4450,0.517),(287,4450,0.519),(288,4450,0.521),(289,4450,0.523),(290,4450,0.524),(291,4450,0.526),(292,4450,0.528),(293,4450,0.53),(294,4450,0.532),(295,4450,0.534),]
rpm4600_Pelk_Speed_Torque = [(120,4600,0.192),(121,4600,0.193),(122,4600,0.195),(123,4600,0.197),(124,4600,0.199),(125,4600,0.201),(126,4600,0.203),(127,4600,0.205),(128,4600,0.207),(129,4600,0.209),(130,4600,0.211),(131,4600,0.212),(132,4600,0.214),(133,4600,0.216),(134,4600,0.218),(135,4600,0.22),(136,4600,0.222),(137,4600,0.224),(138,4600,0.226),(139,4600,0.228),(140,4600,0.229),(141,4600,0.231),(142,4600,0.233),(143,4600,0.235),(144,4600,0.237),(145,4600,0.239),(146,4600,0.241),(147,4600,0.243),(148,4600,0.245),(149,4600,0.246),(150,4600,0.248),(151,4600,0.25),(152,4600,0.252),(153,4600,0.254),(154,4600,0.256),(155,4600,0.258),(156,4600,0.26),(157,4600,0.261),(158,4600,0.263),(159,4600,0.265),(160,4600,0.267),(161,4600,0.269),(162,4600,0.271),(163,4600,0.273),(164,4600,0.275),(165,4600,0.276),(166,4600,0.278),(167,4600,0.28),(168,4600,0.282),(169,4600,0.284),(170,4600,0.286),(171,4600,0.288),(172,4600,0.289),(173,4600,0.291),(174,4600,0.293),(175,4600,0.295),(176,4600,0.297),(177,4600,0.299),(178,4600,0.301),(179,4600,0.302),(180,4600,0.304),(181,4600,0.306),(182,4600,0.308),(183,4600,0.31),(184,4600,0.312),(185,4600,0.314),(186,4600,0.315),(187,4600,0.317),(188,4600,0.319),(189,4600,0.321),(190,4600,0.323),(191,4600,0.325),(192,4600,0.327),(193,4600,0.328),(194,4600,0.33),(195,4600,0.332),(196,4600,0.334),(197,4600,0.336),(198,4600,0.338),(199,4600,0.339),(200,4600,0.341),(201,4600,0.343),(202,4600,0.345),(203,4600,0.347),(204,4600,0.349),(205,4600,0.35),(206,4600,0.352),(207,4600,0.354),(208,4600,0.356),(209,4600,0.358),(210,4600,0.36),(211,4600,0.361),(212,4600,0.363),(213,4600,0.365),(214,4600,0.367),(215,4600,0.369),(216,4600,0.371),(217,4600,0.372),(218,4600,0.374),(219,4600,0.376),(220,4600,0.378),(221,4600,0.38),(222,4600,0.382),(223,4600,0.383),(224,4600,0.385),(225,4600,0.387),(226,4600,0.389),(227,4600,0.391),(228,4600,0.393),(229,4600,0.394),(230,4600,0.396),(231,4600,0.398),(232,4600,0.4),(233,4600,0.402),(234,4600,0.403),(235,4600,0.405),(236,4600,0.407),(237,4600,0.409),(238,4600,0.411),(239,4600,0.412),(240,4600,0.414),(241,4600,0.416),(242,4600,0.418),(243,4600,0.42),(244,4600,0.421),(245,4600,0.423),(246,4600,0.425),(247,4600,0.427),(248,4600,0.429),(249,4600,0.43),(250,4600,0.432),(251,4600,0.434),(252,4600,0.436),(253,4600,0.438),(254,4600,0.439),(255,4600,0.441),(256,4600,0.443),(257,4600,0.445),(258,4600,0.447),(259,4600,0.448),(260,4600,0.45),(261,4600,0.452),(262,4600,0.454),(263,4600,0.456),(264,4600,0.457),(265,4600,0.459),(266,4600,0.461),(267,4600,0.463),(268,4600,0.465),(269,4600,0.466),(270,4600,0.468),(271,4600,0.47),(272,4600,0.472),(273,4600,0.473),(274,4600,0.475),(275,4600,0.477),(276,4600,0.479),(277,4600,0.481),(278,4600,0.482),(279,4600,0.484),(280,4600,0.486),(281,4600,0.488),(282,4600,0.489),(283,4600,0.491),(284,4600,0.493),(285,4600,0.495),(286,4600,0.497),(287,4600,0.498),(288,4600,0.5),(289,4600,0.502),(290,4600,0.504),(291,4600,0.505),(292,4600,0.507),(293,4600,0.509),(294,4600,0.511),(295,4600,0.512),(296,4600,0.514),(297,4600,0.516),(298,4600,0.518),(299,4600,0.52),(300,4600,0.521),(301,4600,0.523),(302,4600,0.525),(303,4600,0.527),(304,4600,0.528),(305,4600,0.53),(306,4600,0.532),(307,4600,0.534),(308,4600,0.535),(309,4600,0.537),(310,4600,0.539),(311,4600,0.541),(312,4600,0.542),(313,4600,0.544),(314,4600,0.546),(315,4600,0.548),(316,4600,0.549)]
rpm4800_Pelk_Speed_Torque = [(153,4800,0.237),(154,4800,0.239),(155,4800,0.241),(156,4800,0.243),(157,4800,0.245),(158,4800,0.246),(159,4800,0.248),(160,4800,0.25),(161,4800,0.252),(162,4800,0.254),(163,4800,0.256),(164,4800,0.257),(165,4800,0.259),(166,4800,0.261),(167,4800,0.263),(168,4800,0.265),(169,4800,0.267),(170,4800,0.268),(171,4800,0.27),(172,4800,0.272),(173,4800,0.274),(174,4800,0.276),(175,4800,0.277),(176,4800,0.279),(177,4800,0.281),(178,4800,0.283),(179,4800,0.285),(180,4800,0.287),(181,4800,0.288),(182,4800,0.29),(183,4800,0.292),(184,4800,0.294),(185,4800,0.296),(186,4800,0.297),(187,4800,0.299),(188,4800,0.301),(189,4800,0.303),(190,4800,0.305),(191,4800,0.307),(192,4800,0.308),(193,4800,0.31),(194,4800,0.312),(195,4800,0.314),(196,4800,0.316),(197,4800,0.317),(198,4800,0.319),(199,4800,0.321),(200,4800,0.323),(201,4800,0.325),(202,4800,0.326),(203,4800,0.328),(204,4800,0.33),(205,4800,0.332),(206,4800,0.334),(207,4800,0.335),(208,4800,0.337),(209,4800,0.339),(210,4800,0.341),(211,4800,0.343),(212,4800,0.344),(213,4800,0.346),(214,4800,0.348),(215,4800,0.35),(216,4800,0.352),(217,4800,0.353),(218,4800,0.355),(219,4800,0.357),(220,4800,0.359),(221,4800,0.361),(222,4800,0.362),(223,4800,0.364),(224,4800,0.366),(225,4800,0.368),(226,4800,0.369),(227,4800,0.371),(228,4800,0.373),(229,4800,0.375),(230,4800,0.377),(231,4800,0.378),(232,4800,0.38),(233,4800,0.382),(234,4800,0.384),(235,4800,0.385),(236,4800,0.387),(237,4800,0.389),(238,4800,0.391),(239,4800,0.393),(240,4800,0.394),(241,4800,0.396),(242,4800,0.398),(243,4800,0.4),(244,4800,0.401),(245,4800,0.403),(246,4800,0.405),(247,4800,0.407),(248,4800,0.408),(249,4800,0.41),(250,4800,0.412),(251,4800,0.414),(252,4800,0.416),(253,4800,0.417),(254,4800,0.419),(255,4800,0.421),(256,4800,0.423),(257,4800,0.424),(258,4800,0.426),(259,4800,0.428),(260,4800,0.43),(261,4800,0.431),(262,4800,0.433),(263,4800,0.435),(264,4800,0.437),(265,4800,0.438),(266,4800,0.44),(267,4800,0.442),(268,4800,0.444),(269,4800,0.445),(270,4800,0.447),(271,4800,0.449),(272,4800,0.451),(273,4800,0.452),(274,4800,0.454),(275,4800,0.456),(276,4800,0.458),(277,4800,0.459),(278,4800,0.461),(279,4800,0.463),(280,4800,0.465),(281,4800,0.466),(282,4800,0.468),(283,4800,0.47),(284,4800,0.472),(285,4800,0.473),(286,4800,0.475),(287,4800,0.477),(288,4800,0.478),(289,4800,0.48),(290,4800,0.482),(291,4800,0.484),(292,4800,0.485),(293,4800,0.487),(294,4800,0.489),(295,4800,0.491),(296,4800,0.492),(297,4800,0.494),(298,4800,0.496),(299,4800,0.497),(300,4800,0.499),(301,4800,0.501),(302,4800,0.503),(303,4800,0.504),(304,4800,0.506),(305,4800,0.508),(306,4800,0.51),(307,4800,0.511),(308,4800,0.513),(309,4800,0.515),(310,4800,0.516),(311,4800,0.518),(312,4800,0.52),(313,4800,0.522),(314,4800,0.523),(315,4800,0.525),(316,4800,0.527),(317,4800,0.528),(318,4800,0.53),(319,4800,0.532),(320,4800,0.534),(321,4800,0.535),(322,4800,0.537),(323,4800,0.539),(324,4800,0.54),(325,4800,0.542),(326,4800,0.544),(327,4800,0.545),(328,4800,0.547),(329,4800,0.549),(330,4800,0.551),(331,4800,0.552),(332,4800,0.554),(333,4800,0.556),(334,4800,0.557),(335,4800,0.559),(336,4800,0.561),(337,4800,0.562),(338,4800,0.564),(339,4800,0.566),(340,4800,0.568),(341,4800,0.569),(342,4800,0.571),(343,4800,0.573),(344,4800,0.574),(345,4800,0.576),(346,4800,0.578),(347,4800,0.579),]
rpm5000_Pelk_Speed_Torque = [(165,5000,0.249),(166,5000,0.251),(167,5000,0.253),(168,5000,0.254),(169,5000,0.256),(170,5000,0.258),(171,5000,0.26),(172,5000,0.261),(173,5000,0.263),(174,5000,0.265),(175,5000,0.267),(176,5000,0.268),(177,5000,0.27),(178,5000,0.272),(179,5000,0.274),(180,5000,0.275),(181,5000,0.277),(182,5000,0.279),(183,5000,0.28),(184,5000,0.282),(185,5000,0.284),(186,5000,0.286),(187,5000,0.287),(188,5000,0.289),(189,5000,0.291),(190,5000,0.293),(191,5000,0.294),(192,5000,0.296),(193,5000,0.298),(194,5000,0.3),(195,5000,0.301),(196,5000,0.303),(197,5000,0.305),(198,5000,0.306),(199,5000,0.308),(200,5000,0.31),(201,5000,0.312),(202,5000,0.313),(203,5000,0.315),(204,5000,0.317),(205,5000,0.318),(206,5000,0.32),(207,5000,0.322),(208,5000,0.324),(209,5000,0.325),(210,5000,0.327),(211,5000,0.329),(212,5000,0.33),(213,5000,0.332),(214,5000,0.334),(215,5000,0.336),(216,5000,0.337),(217,5000,0.339),(218,5000,0.341),(219,5000,0.342),(220,5000,0.344),(221,5000,0.346),(222,5000,0.348),(223,5000,0.349),(224,5000,0.351),(225,5000,0.353),(226,5000,0.354),(227,5000,0.356),(228,5000,0.358),(229,5000,0.36),(230,5000,0.361),(231,5000,0.363),(232,5000,0.365),(233,5000,0.366),(234,5000,0.368),(235,5000,0.37),(236,5000,0.372),(237,5000,0.373),(238,5000,0.375),(239,5000,0.377),(240,5000,0.378),(241,5000,0.38),(242,5000,0.382),(243,5000,0.383),(244,5000,0.385),(245,5000,0.387),(246,5000,0.389),(247,5000,0.39),(248,5000,0.392),(249,5000,0.394),(250,5000,0.395),(251,5000,0.397),(252,5000,0.399),(253,5000,0.4),(254,5000,0.402),(255,5000,0.404),(256,5000,0.405),(257,5000,0.407),(258,5000,0.409),(259,5000,0.411),(260,5000,0.412),(261,5000,0.414),(262,5000,0.416),(263,5000,0.417),(264,5000,0.419),(265,5000,0.421),(266,5000,0.422),(267,5000,0.424),(268,5000,0.426),(269,5000,0.427),(270,5000,0.429),(271,5000,0.431),(272,5000,0.432),(273,5000,0.434),(274,5000,0.436),(275,5000,0.437),(276,5000,0.439),(277,5000,0.441),(278,5000,0.442),(279,5000,0.444),(280,5000,0.446),(281,5000,0.448),(282,5000,0.449),(283,5000,0.451),(284,5000,0.453),(285,5000,0.454),(286,5000,0.456),(287,5000,0.458),(288,5000,0.459),(289,5000,0.461),(290,5000,0.463),(291,5000,0.464),(292,5000,0.466),(293,5000,0.468),(294,5000,0.469),(295,5000,0.471),(296,5000,0.473),(297,5000,0.474),(298,5000,0.476),(299,5000,0.478),(300,5000,0.479),(301,5000,0.481),(302,5000,0.483),(303,5000,0.484),(304,5000,0.486),(305,5000,0.488),(306,5000,0.489),(307,5000,0.491),(308,5000,0.493),(309,5000,0.494),(310,5000,0.496),(311,5000,0.498),(312,5000,0.499),(313,5000,0.501),(314,5000,0.503),(315,5000,0.504),(316,5000,0.506),(317,5000,0.507),(318,5000,0.509),(319,5000,0.511),(320,5000,0.512),(321,5000,0.514),(322,5000,0.516),(323,5000,0.517),(324,5000,0.519),(325,5000,0.521),(326,5000,0.522),(327,5000,0.524),(328,5000,0.526),(329,5000,0.527),(330,5000,0.529),(331,5000,0.531),(332,5000,0.532),(333,5000,0.534),(334,5000,0.536),(335,5000,0.537),(336,5000,0.539),(337,5000,0.54),(338,5000,0.542),(339,5000,0.544),(340,5000,0.545),(341,5000,0.547),(342,5000,0.549),(343,5000,0.55),(344,5000,0.552),(345,5000,0.554),(346,5000,0.555),(347,5000,0.557),(348,5000,0.559),(349,5000,0.56),(350,5000,0.562),(351,5000,0.563),(352,5000,0.565),(353,5000,0.567),(354,5000,0.568),(355,5000,0.57),(356,5000,0.572),(357,5000,0.573),(358,5000,0.575),(359,5000,0.576),(360,5000,0.578),(361,5000,0.58),(362,5000,0.581),(363,5000,0.583),(364,5000,0.585),(365,5000,0.586),(366,5000,0.588),(367,5000,0.59),(368,5000,0.591),(369,5000,0.593),(370,5000,0.594),(371,5000,0.596),(372,5000,0.598),(373,5000,0.599),(374,5000,0.601),(375,5000,0.602),(376,5000,0.604),(377,5000,0.606),(378,5000,0.607),(379,5000,0.609),]

Pelk_Speed_Torque = np.array(rpm1400_Pelk_Speed_Torque+rpm1600_Pelk_Speed_Torque+rpm1800_Pelk_Speed_Torque+rpm2000_Pelk_Speed_Torque+rpm2200_Pelk_Speed_Torque+rpm2400_Pelk_Speed_Torque+rpm2600_Pelk_Speed_Torque+rpm2800_Pelk_Speed_Torque+rpm3000_Pelk_Speed_Torque+rpm3300_Pelk_Speed_Torque+rpm3500_Pelk_Speed_Torque+rpm3700_Pelk_Speed_Torque+rpm4000_Pelk_Speed_Torque+rpm4200_Pelk_Speed_Torque+rpm4450_Pelk_Speed_Torque+rpm4600_Pelk_Speed_Torque+rpm4800_Pelk_Speed_Torque+rpm5000_Pelk_Speed_Torque)


Pelk_Speed_Torque_guess = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)


Pelk_Speed_Torque_curve_parameters, popt = optimize.curve_fit(threeDimensionCurveFit, Pelk_Speed_Torque[:,:2], Pelk_Speed_Torque[:,2], Pelk_Speed_Torque_guess)
